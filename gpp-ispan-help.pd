#N canvas 1280 180 2242 1457 12;
#X obj 574 101 cnv 10 112 22 empty empty AIR 36 6 1 22 -66577 -262144
0;
#X text 574 126 Gregor Pir≈° 2022;
#X msg 387 153 1-3\\\,6-10;
#X msg 323 67 1\\\,3\\\,5\\\,7-11\\\,13;
#X msg 416 205 1\\\,3\\\,5;
#X obj 175 170 gpp-ispan 20;
#X obj 220 366 print SWITCHES;
#X obj 56 368 print SELECTION_LIST;
#X obj 56 333 spigot;
#X obj 221 326 spigot;
#X obj 73 215 tgl 22 0 empty ss SWITCHES|SELECTION 23 12 0 10 -261682
-1 -1 1 1;
#X obj 284 278 expr !$f1;
#X obj 577 25 cnv 15 100 60 empty empty empty 20 12 0 14 -261234 -66577
0;
#X msg 584 58 1 \, 3 \, 5 \, 7-11 \, 13;
#X msg 583 31 1 \, 3 \, 5;
#X text 682 24 DON'T!;
#X text 151 8 FIRST RULE: NO UNQUOTED COMMAS;
#X msg 618 333 even;
#X msg 618 364 odd;
#X text 593 289 even and odd selector also works:, f 20;
#X msg 424 175 14-16;
#X msg 23 132 clear;
#X msg 18 96 print;
#X text 564 149 gpp-ispan is stackable: it will keep stacking input
spans into the third inlet till 'clear' directive into the left inlet
is applied. 'print' prints the whole (cummulative) inverse span result.
The second inlet serves as a 'substractor' and will remove the span
\, passed through itself \, from the whole equation.;
#X msg 354 105 1-10;
#X msg 250 78 odd;
#X msg 241 47 1 \, 3 \, 5-7;
#X text 705 97 gpp-ispan :: inverse number span :: input data in format
1\\\,3\\\,5\\\,7-11 \, 13 :: output: dripping list of all numbers;
#X text 153 23 except:;
#X text 322 45 fro whole remove:;
#X msg 213 138 1;
#X msg 134 82 0;
#X text 83 46 add span to inversion, f 12;
#X text 170 89 remove span from inversion, f 11;
#X msg 313 114 3;
#X connect 2 0 5 2;
#X connect 3 0 5 2;
#X connect 4 0 5 2;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 8 0 7 0;
#X connect 9 0 6 0;
#X connect 10 0 9 1;
#X connect 10 0 11 0;
#X connect 11 0 8 1;
#X connect 17 0 5 2;
#X connect 18 0 5 2;
#X connect 20 0 5 2;
#X connect 21 0 5 0;
#X connect 22 0 5 0;
#X connect 24 0 5 2;
#X connect 25 0 5 2;
#X connect 26 0 5 2;
#X connect 30 0 5 1;
#X connect 31 0 5 1;
#X connect 34 0 5 2;
